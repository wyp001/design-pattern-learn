package com.wyp.adapter.objectAdapter;

/**
 * 对象的适配器模式
 * 与类的适配器模式不同的是：对象的适配器模式不是使用继承关系连接到Adaptee类，而是使用委派关系连接到Adaptee类。
 *
 * 两种适配器比较
 * 1、对象适配器: 使用组合的方式, 不仅能适配一个被适配者的类, 还可以适配它的任何一个子类;
 * 2、类适配器: 只能适配一个特定的类, 但是它不需要重新实现整个被适配者的功能. 而且它还可以重写被适配者的行为;
 * 3、对象适配器: 使用的是组合而不是继承, 通过多写几行代码把事情委托给了被适配者. 这样很灵活;
 * 4、类适配器: 需要一个适配器和一个被适配者, 只需要一个类就行;
 * 5、对象适配器: 对适配器添加的任何行为对被适配者和它的子类都起作用; ...
 *
 * 解决的问题
 * 从模式的定义中，我们看到适配器模式就是用来转换接口，解决不兼容问题的。
 * 想想我们现实生活中的适配器，最常用的就是手机充电器了，也叫做电源适配器，
 * 它把家用交流强电转换为手机用的直流弱电。其中交流电就是被适配者，充电器是适配器，手机是用电客户。
 */
public class Client {
    public static void main(String[] args) {
        // 步骤4：定义具体使用目标类，并通过Adapter类调用所需要的方法从而实现目标
        //需要先创建一个被适配类的对象作为参数
        Target mAdapter = new Adapter(new Adaptee());
        mAdapter.operation();
    }

}
